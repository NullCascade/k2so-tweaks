local util_recycling = {}

--- @param item string
--- @param results data.ProductPrototype[]
function util_recycling.set_results(item, results)
	local item_prototype = data.raw["item"][item]
	if (not item_prototype) then
		return
	end

	local recycling_recipe = data.raw["recipe"][item .. "-recycling"]
	if (not recycling_recipe) then
		return
	end

	recycling_recipe.results = results
end

--- @param item string
--- @param result string
function util_recycling.has_result(item, result)
	local util = require("k2so-tweaks.util")
	return util.recipe.has_result(item .. "-recycling", result)
end

--- @param item string
function util_recycling.is_autogenerated(item)
	local item_prototype = data.raw["item"][item]
	if (not item_prototype) then return false end
	return item_prototype.auto_recycle
end

--- @param item string
function util_recycling.reset_to_self_recycle(item)
	util_recycling.set_results(item, {
		{ type = "item", name = item, amount = 0, extra_count_fraction = 0.25 },
	})
end

return util_recycling